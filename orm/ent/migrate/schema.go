// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CameraPointColumns holds the columns for the "camera_point" table.
	CameraPointColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "sn", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "pos", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "floor", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "building", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "area", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
	}
	// CameraPointTable holds the schema information for the "camera_point" table.
	CameraPointTable = &schema.Table{
		Name:       "camera_point",
		Columns:    CameraPointColumns,
		PrimaryKey: []*schema.Column{CameraPointColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "point_sn",
				Unique:  false,
				Columns: []*schema.Column{CameraPointColumns[3]},
			},
		},
	}
	// CameraUploadColumns holds the columns for the "camera_upload" table.
	CameraUploadColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "sn", Type: field.TypeString, Unique: true, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "ip", Type: field.TypeString, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
		{Name: "last_time", Type: field.TypeTime},
		{Name: "id_1", Type: field.TypeString, Unique: true, Nullable: true, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "id_2", Type: field.TypeString, Unique: true, Nullable: true, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
	}
	// CameraUploadTable holds the schema information for the "camera_upload" table.
	CameraUploadTable = &schema.Table{
		Name:       "camera_upload",
		Columns:    CameraUploadColumns,
		PrimaryKey: []*schema.Column{CameraUploadColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "upload_sn",
				Unique:  false,
				Columns: []*schema.Column{CameraUploadColumns[3]},
			},
		},
	}
	// CameraUsingColumns holds the columns for the "camera_using" table.
	CameraUsingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "sn", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "varchar(36)", "postgres": "varchar(36)", "sqlite3": "varchar(36)"}},
		{Name: "uuid", Type: field.TypeString, Size: 36, SchemaType: map[string]string{"mysql": "char(36)", "postgres": "char(36)", "sqlite3": "char(36)"}},
		{Name: "alg", Type: field.TypeString, Size: 16, SchemaType: map[string]string{"mysql": "varchar(16)", "postgres": "varchar(16)", "sqlite3": "varchar(16)"}},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 64, SchemaType: map[string]string{"mysql": "varchar(64)", "postgres": "varchar(64)", "sqlite3": "varchar(64)"}},
	}
	// CameraUsingTable holds the schema information for the "camera_using" table.
	CameraUsingTable = &schema.Table{
		Name:       "camera_using",
		Columns:    CameraUsingColumns,
		PrimaryKey: []*schema.Column{CameraUsingColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "using_uuid",
				Unique:  false,
				Columns: []*schema.Column{CameraUsingColumns[4]},
			},
			{
				Name:    "using_sn",
				Unique:  false,
				Columns: []*schema.Column{CameraUsingColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CameraPointTable,
		CameraUploadTable,
		CameraUsingTable,
	}
)

func init() {
	CameraPointTable.Annotation = &entsql.Annotation{
		Table: "camera_point",
	}
	CameraUploadTable.Annotation = &entsql.Annotation{
		Table: "camera_upload",
	}
	CameraUsingTable.Annotation = &entsql.Annotation{
		Table: "camera_using",
	}
}
