// Code generated by ent, DO NOT EDIT.

package pos

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/doggy/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldUpdateTime, v))
}

// Sn applies equality check predicate on the "sn" field. It's identical to SnEQ.
func Sn(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldSn, v))
}

// Pos applies equality check predicate on the "pos" field. It's identical to PosEQ.
func Pos(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldPos, v))
}

// Floor applies equality check predicate on the "floor" field. It's identical to FloorEQ.
func Floor(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldFloor, v))
}

// Building applies equality check predicate on the "building" field. It's identical to BuildingEQ.
func Building(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldBuilding, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldArea, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldUpdateTime, v))
}

// SnEQ applies the EQ predicate on the "sn" field.
func SnEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldSn, v))
}

// SnNEQ applies the NEQ predicate on the "sn" field.
func SnNEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldSn, v))
}

// SnIn applies the In predicate on the "sn" field.
func SnIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldSn, vs...))
}

// SnNotIn applies the NotIn predicate on the "sn" field.
func SnNotIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldSn, vs...))
}

// SnGT applies the GT predicate on the "sn" field.
func SnGT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldSn, v))
}

// SnGTE applies the GTE predicate on the "sn" field.
func SnGTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldSn, v))
}

// SnLT applies the LT predicate on the "sn" field.
func SnLT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldSn, v))
}

// SnLTE applies the LTE predicate on the "sn" field.
func SnLTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldSn, v))
}

// SnContains applies the Contains predicate on the "sn" field.
func SnContains(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContains(FieldSn, v))
}

// SnHasPrefix applies the HasPrefix predicate on the "sn" field.
func SnHasPrefix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasPrefix(FieldSn, v))
}

// SnHasSuffix applies the HasSuffix predicate on the "sn" field.
func SnHasSuffix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasSuffix(FieldSn, v))
}

// SnEqualFold applies the EqualFold predicate on the "sn" field.
func SnEqualFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEqualFold(FieldSn, v))
}

// SnContainsFold applies the ContainsFold predicate on the "sn" field.
func SnContainsFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContainsFold(FieldSn, v))
}

// PosEQ applies the EQ predicate on the "pos" field.
func PosEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldPos, v))
}

// PosNEQ applies the NEQ predicate on the "pos" field.
func PosNEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldPos, v))
}

// PosIn applies the In predicate on the "pos" field.
func PosIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldPos, vs...))
}

// PosNotIn applies the NotIn predicate on the "pos" field.
func PosNotIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldPos, vs...))
}

// PosGT applies the GT predicate on the "pos" field.
func PosGT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldPos, v))
}

// PosGTE applies the GTE predicate on the "pos" field.
func PosGTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldPos, v))
}

// PosLT applies the LT predicate on the "pos" field.
func PosLT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldPos, v))
}

// PosLTE applies the LTE predicate on the "pos" field.
func PosLTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldPos, v))
}

// PosContains applies the Contains predicate on the "pos" field.
func PosContains(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContains(FieldPos, v))
}

// PosHasPrefix applies the HasPrefix predicate on the "pos" field.
func PosHasPrefix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasPrefix(FieldPos, v))
}

// PosHasSuffix applies the HasSuffix predicate on the "pos" field.
func PosHasSuffix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasSuffix(FieldPos, v))
}

// PosEqualFold applies the EqualFold predicate on the "pos" field.
func PosEqualFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEqualFold(FieldPos, v))
}

// PosContainsFold applies the ContainsFold predicate on the "pos" field.
func PosContainsFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContainsFold(FieldPos, v))
}

// FloorEQ applies the EQ predicate on the "floor" field.
func FloorEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldFloor, v))
}

// FloorNEQ applies the NEQ predicate on the "floor" field.
func FloorNEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldFloor, v))
}

// FloorIn applies the In predicate on the "floor" field.
func FloorIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldFloor, vs...))
}

// FloorNotIn applies the NotIn predicate on the "floor" field.
func FloorNotIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldFloor, vs...))
}

// FloorGT applies the GT predicate on the "floor" field.
func FloorGT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldFloor, v))
}

// FloorGTE applies the GTE predicate on the "floor" field.
func FloorGTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldFloor, v))
}

// FloorLT applies the LT predicate on the "floor" field.
func FloorLT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldFloor, v))
}

// FloorLTE applies the LTE predicate on the "floor" field.
func FloorLTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldFloor, v))
}

// FloorContains applies the Contains predicate on the "floor" field.
func FloorContains(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContains(FieldFloor, v))
}

// FloorHasPrefix applies the HasPrefix predicate on the "floor" field.
func FloorHasPrefix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasPrefix(FieldFloor, v))
}

// FloorHasSuffix applies the HasSuffix predicate on the "floor" field.
func FloorHasSuffix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasSuffix(FieldFloor, v))
}

// FloorIsNil applies the IsNil predicate on the "floor" field.
func FloorIsNil() predicate.Pos {
	return predicate.Pos(sql.FieldIsNull(FieldFloor))
}

// FloorNotNil applies the NotNil predicate on the "floor" field.
func FloorNotNil() predicate.Pos {
	return predicate.Pos(sql.FieldNotNull(FieldFloor))
}

// FloorEqualFold applies the EqualFold predicate on the "floor" field.
func FloorEqualFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEqualFold(FieldFloor, v))
}

// FloorContainsFold applies the ContainsFold predicate on the "floor" field.
func FloorContainsFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContainsFold(FieldFloor, v))
}

// BuildingEQ applies the EQ predicate on the "building" field.
func BuildingEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldBuilding, v))
}

// BuildingNEQ applies the NEQ predicate on the "building" field.
func BuildingNEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldBuilding, v))
}

// BuildingIn applies the In predicate on the "building" field.
func BuildingIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldBuilding, vs...))
}

// BuildingNotIn applies the NotIn predicate on the "building" field.
func BuildingNotIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldBuilding, vs...))
}

// BuildingGT applies the GT predicate on the "building" field.
func BuildingGT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldBuilding, v))
}

// BuildingGTE applies the GTE predicate on the "building" field.
func BuildingGTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldBuilding, v))
}

// BuildingLT applies the LT predicate on the "building" field.
func BuildingLT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldBuilding, v))
}

// BuildingLTE applies the LTE predicate on the "building" field.
func BuildingLTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldBuilding, v))
}

// BuildingContains applies the Contains predicate on the "building" field.
func BuildingContains(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContains(FieldBuilding, v))
}

// BuildingHasPrefix applies the HasPrefix predicate on the "building" field.
func BuildingHasPrefix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasPrefix(FieldBuilding, v))
}

// BuildingHasSuffix applies the HasSuffix predicate on the "building" field.
func BuildingHasSuffix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasSuffix(FieldBuilding, v))
}

// BuildingIsNil applies the IsNil predicate on the "building" field.
func BuildingIsNil() predicate.Pos {
	return predicate.Pos(sql.FieldIsNull(FieldBuilding))
}

// BuildingNotNil applies the NotNil predicate on the "building" field.
func BuildingNotNil() predicate.Pos {
	return predicate.Pos(sql.FieldNotNull(FieldBuilding))
}

// BuildingEqualFold applies the EqualFold predicate on the "building" field.
func BuildingEqualFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEqualFold(FieldBuilding, v))
}

// BuildingContainsFold applies the ContainsFold predicate on the "building" field.
func BuildingContainsFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContainsFold(FieldBuilding, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v string) predicate.Pos {
	return predicate.Pos(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...string) predicate.Pos {
	return predicate.Pos(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v string) predicate.Pos {
	return predicate.Pos(sql.FieldLTE(FieldArea, v))
}

// AreaContains applies the Contains predicate on the "area" field.
func AreaContains(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContains(FieldArea, v))
}

// AreaHasPrefix applies the HasPrefix predicate on the "area" field.
func AreaHasPrefix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasPrefix(FieldArea, v))
}

// AreaHasSuffix applies the HasSuffix predicate on the "area" field.
func AreaHasSuffix(v string) predicate.Pos {
	return predicate.Pos(sql.FieldHasSuffix(FieldArea, v))
}

// AreaIsNil applies the IsNil predicate on the "area" field.
func AreaIsNil() predicate.Pos {
	return predicate.Pos(sql.FieldIsNull(FieldArea))
}

// AreaNotNil applies the NotNil predicate on the "area" field.
func AreaNotNil() predicate.Pos {
	return predicate.Pos(sql.FieldNotNull(FieldArea))
}

// AreaEqualFold applies the EqualFold predicate on the "area" field.
func AreaEqualFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldEqualFold(FieldArea, v))
}

// AreaContainsFold applies the ContainsFold predicate on the "area" field.
func AreaContainsFold(v string) predicate.Pos {
	return predicate.Pos(sql.FieldContainsFold(FieldArea, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Pos) predicate.Pos {
	return predicate.Pos(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Pos) predicate.Pos {
	return predicate.Pos(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Pos) predicate.Pos {
	return predicate.Pos(sql.NotPredicates(p))
}
