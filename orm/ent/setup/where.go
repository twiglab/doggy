// Code generated by ent, DO NOT EDIT.

package setup

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/doggy/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUpdateTime, v))
}

// Sn applies equality check predicate on the "sn" field. It's identical to SnEQ.
func Sn(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldSn, v))
}

// IP applies equality check predicate on the "ip" field. It's identical to IPEQ.
func IP(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldIP, v))
}

// LastTime applies equality check predicate on the "last_time" field. It's identical to LastTimeEQ.
func LastTime(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldLastTime, v))
}

// User applies equality check predicate on the "user" field. It's identical to UserEQ.
func User(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUser, v))
}

// Pwd applies equality check predicate on the "pwd" field. It's identical to PwdEQ.
func Pwd(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPwd, v))
}

// Uuid1 applies equality check predicate on the "uuid1" field. It's identical to Uuid1EQ.
func Uuid1(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUuid1, v))
}

// Uuid2 applies equality check predicate on the "uuid2" field. It's identical to Uuid2EQ.
func Uuid2(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUuid2, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUpdateTime, v))
}

// SnEQ applies the EQ predicate on the "sn" field.
func SnEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldSn, v))
}

// SnNEQ applies the NEQ predicate on the "sn" field.
func SnNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldSn, v))
}

// SnIn applies the In predicate on the "sn" field.
func SnIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldSn, vs...))
}

// SnNotIn applies the NotIn predicate on the "sn" field.
func SnNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldSn, vs...))
}

// SnGT applies the GT predicate on the "sn" field.
func SnGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldSn, v))
}

// SnGTE applies the GTE predicate on the "sn" field.
func SnGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldSn, v))
}

// SnLT applies the LT predicate on the "sn" field.
func SnLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldSn, v))
}

// SnLTE applies the LTE predicate on the "sn" field.
func SnLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldSn, v))
}

// SnContains applies the Contains predicate on the "sn" field.
func SnContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldSn, v))
}

// SnHasPrefix applies the HasPrefix predicate on the "sn" field.
func SnHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldSn, v))
}

// SnHasSuffix applies the HasSuffix predicate on the "sn" field.
func SnHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldSn, v))
}

// SnEqualFold applies the EqualFold predicate on the "sn" field.
func SnEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldSn, v))
}

// SnContainsFold applies the ContainsFold predicate on the "sn" field.
func SnContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldSn, v))
}

// IPEQ applies the EQ predicate on the "ip" field.
func IPEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldIP, v))
}

// IPNEQ applies the NEQ predicate on the "ip" field.
func IPNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldIP, v))
}

// IPIn applies the In predicate on the "ip" field.
func IPIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldIP, vs...))
}

// IPNotIn applies the NotIn predicate on the "ip" field.
func IPNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldIP, vs...))
}

// IPGT applies the GT predicate on the "ip" field.
func IPGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldIP, v))
}

// IPGTE applies the GTE predicate on the "ip" field.
func IPGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldIP, v))
}

// IPLT applies the LT predicate on the "ip" field.
func IPLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldIP, v))
}

// IPLTE applies the LTE predicate on the "ip" field.
func IPLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldIP, v))
}

// IPContains applies the Contains predicate on the "ip" field.
func IPContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldIP, v))
}

// IPHasPrefix applies the HasPrefix predicate on the "ip" field.
func IPHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldIP, v))
}

// IPHasSuffix applies the HasSuffix predicate on the "ip" field.
func IPHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldIP, v))
}

// IPEqualFold applies the EqualFold predicate on the "ip" field.
func IPEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldIP, v))
}

// IPContainsFold applies the ContainsFold predicate on the "ip" field.
func IPContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldIP, v))
}

// LastTimeEQ applies the EQ predicate on the "last_time" field.
func LastTimeEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldLastTime, v))
}

// LastTimeNEQ applies the NEQ predicate on the "last_time" field.
func LastTimeNEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldLastTime, v))
}

// LastTimeIn applies the In predicate on the "last_time" field.
func LastTimeIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldLastTime, vs...))
}

// LastTimeNotIn applies the NotIn predicate on the "last_time" field.
func LastTimeNotIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldLastTime, vs...))
}

// LastTimeGT applies the GT predicate on the "last_time" field.
func LastTimeGT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldLastTime, v))
}

// LastTimeGTE applies the GTE predicate on the "last_time" field.
func LastTimeGTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldLastTime, v))
}

// LastTimeLT applies the LT predicate on the "last_time" field.
func LastTimeLT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldLastTime, v))
}

// LastTimeLTE applies the LTE predicate on the "last_time" field.
func LastTimeLTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldLastTime, v))
}

// UserEQ applies the EQ predicate on the "user" field.
func UserEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUser, v))
}

// UserNEQ applies the NEQ predicate on the "user" field.
func UserNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUser, v))
}

// UserIn applies the In predicate on the "user" field.
func UserIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUser, vs...))
}

// UserNotIn applies the NotIn predicate on the "user" field.
func UserNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUser, vs...))
}

// UserGT applies the GT predicate on the "user" field.
func UserGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUser, v))
}

// UserGTE applies the GTE predicate on the "user" field.
func UserGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUser, v))
}

// UserLT applies the LT predicate on the "user" field.
func UserLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUser, v))
}

// UserLTE applies the LTE predicate on the "user" field.
func UserLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUser, v))
}

// UserContains applies the Contains predicate on the "user" field.
func UserContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldUser, v))
}

// UserHasPrefix applies the HasPrefix predicate on the "user" field.
func UserHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldUser, v))
}

// UserHasSuffix applies the HasSuffix predicate on the "user" field.
func UserHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldUser, v))
}

// UserIsNil applies the IsNil predicate on the "user" field.
func UserIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldUser))
}

// UserNotNil applies the NotNil predicate on the "user" field.
func UserNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldUser))
}

// UserEqualFold applies the EqualFold predicate on the "user" field.
func UserEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldUser, v))
}

// UserContainsFold applies the ContainsFold predicate on the "user" field.
func UserContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldUser, v))
}

// PwdEQ applies the EQ predicate on the "pwd" field.
func PwdEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPwd, v))
}

// PwdNEQ applies the NEQ predicate on the "pwd" field.
func PwdNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldPwd, v))
}

// PwdIn applies the In predicate on the "pwd" field.
func PwdIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldPwd, vs...))
}

// PwdNotIn applies the NotIn predicate on the "pwd" field.
func PwdNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldPwd, vs...))
}

// PwdGT applies the GT predicate on the "pwd" field.
func PwdGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldPwd, v))
}

// PwdGTE applies the GTE predicate on the "pwd" field.
func PwdGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldPwd, v))
}

// PwdLT applies the LT predicate on the "pwd" field.
func PwdLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldPwd, v))
}

// PwdLTE applies the LTE predicate on the "pwd" field.
func PwdLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldPwd, v))
}

// PwdContains applies the Contains predicate on the "pwd" field.
func PwdContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldPwd, v))
}

// PwdHasPrefix applies the HasPrefix predicate on the "pwd" field.
func PwdHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldPwd, v))
}

// PwdHasSuffix applies the HasSuffix predicate on the "pwd" field.
func PwdHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldPwd, v))
}

// PwdIsNil applies the IsNil predicate on the "pwd" field.
func PwdIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldPwd))
}

// PwdNotNil applies the NotNil predicate on the "pwd" field.
func PwdNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldPwd))
}

// PwdEqualFold applies the EqualFold predicate on the "pwd" field.
func PwdEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldPwd, v))
}

// PwdContainsFold applies the ContainsFold predicate on the "pwd" field.
func PwdContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldPwd, v))
}

// Uuid1EQ applies the EQ predicate on the "uuid1" field.
func Uuid1EQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUuid1, v))
}

// Uuid1NEQ applies the NEQ predicate on the "uuid1" field.
func Uuid1NEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUuid1, v))
}

// Uuid1In applies the In predicate on the "uuid1" field.
func Uuid1In(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUuid1, vs...))
}

// Uuid1NotIn applies the NotIn predicate on the "uuid1" field.
func Uuid1NotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUuid1, vs...))
}

// Uuid1GT applies the GT predicate on the "uuid1" field.
func Uuid1GT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUuid1, v))
}

// Uuid1GTE applies the GTE predicate on the "uuid1" field.
func Uuid1GTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUuid1, v))
}

// Uuid1LT applies the LT predicate on the "uuid1" field.
func Uuid1LT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUuid1, v))
}

// Uuid1LTE applies the LTE predicate on the "uuid1" field.
func Uuid1LTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUuid1, v))
}

// Uuid1Contains applies the Contains predicate on the "uuid1" field.
func Uuid1Contains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldUuid1, v))
}

// Uuid1HasPrefix applies the HasPrefix predicate on the "uuid1" field.
func Uuid1HasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldUuid1, v))
}

// Uuid1HasSuffix applies the HasSuffix predicate on the "uuid1" field.
func Uuid1HasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldUuid1, v))
}

// Uuid1EqualFold applies the EqualFold predicate on the "uuid1" field.
func Uuid1EqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldUuid1, v))
}

// Uuid1ContainsFold applies the ContainsFold predicate on the "uuid1" field.
func Uuid1ContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldUuid1, v))
}

// Uuid2EQ applies the EQ predicate on the "uuid2" field.
func Uuid2EQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUuid2, v))
}

// Uuid2NEQ applies the NEQ predicate on the "uuid2" field.
func Uuid2NEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUuid2, v))
}

// Uuid2In applies the In predicate on the "uuid2" field.
func Uuid2In(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUuid2, vs...))
}

// Uuid2NotIn applies the NotIn predicate on the "uuid2" field.
func Uuid2NotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUuid2, vs...))
}

// Uuid2GT applies the GT predicate on the "uuid2" field.
func Uuid2GT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUuid2, v))
}

// Uuid2GTE applies the GTE predicate on the "uuid2" field.
func Uuid2GTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUuid2, v))
}

// Uuid2LT applies the LT predicate on the "uuid2" field.
func Uuid2LT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUuid2, v))
}

// Uuid2LTE applies the LTE predicate on the "uuid2" field.
func Uuid2LTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUuid2, v))
}

// Uuid2Contains applies the Contains predicate on the "uuid2" field.
func Uuid2Contains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldUuid2, v))
}

// Uuid2HasPrefix applies the HasPrefix predicate on the "uuid2" field.
func Uuid2HasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldUuid2, v))
}

// Uuid2HasSuffix applies the HasSuffix predicate on the "uuid2" field.
func Uuid2HasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldUuid2, v))
}

// Uuid2EqualFold applies the EqualFold predicate on the "uuid2" field.
func Uuid2EqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldUuid2, v))
}

// Uuid2ContainsFold applies the ContainsFold predicate on the "uuid2" field.
func Uuid2ContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldUuid2, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.NotPredicates(p))
}
