// Code generated by ent, DO NOT EDIT.

package setup

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/doggy/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUpdateTime, v))
}

// Sn applies equality check predicate on the "sn" field. It's identical to SnEQ.
func Sn(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldSn, v))
}

// Pos applies equality check predicate on the "pos" field. It's identical to PosEQ.
func Pos(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPos, v))
}

// Floor applies equality check predicate on the "floor" field. It's identical to FloorEQ.
func Floor(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldFloor, v))
}

// Building applies equality check predicate on the "building" field. It's identical to BuildingEQ.
func Building(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldBuilding, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldArea, v))
}

// Nat applies equality check predicate on the "nat" field. It's identical to NatEQ.
func Nat(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldNat, v))
}

// User applies equality check predicate on the "user" field. It's identical to UserEQ.
func User(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUser, v))
}

// Pwd applies equality check predicate on the "pwd" field. It's identical to PwdEQ.
func Pwd(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPwd, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUpdateTime, v))
}

// SnEQ applies the EQ predicate on the "sn" field.
func SnEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldSn, v))
}

// SnNEQ applies the NEQ predicate on the "sn" field.
func SnNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldSn, v))
}

// SnIn applies the In predicate on the "sn" field.
func SnIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldSn, vs...))
}

// SnNotIn applies the NotIn predicate on the "sn" field.
func SnNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldSn, vs...))
}

// SnGT applies the GT predicate on the "sn" field.
func SnGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldSn, v))
}

// SnGTE applies the GTE predicate on the "sn" field.
func SnGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldSn, v))
}

// SnLT applies the LT predicate on the "sn" field.
func SnLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldSn, v))
}

// SnLTE applies the LTE predicate on the "sn" field.
func SnLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldSn, v))
}

// SnContains applies the Contains predicate on the "sn" field.
func SnContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldSn, v))
}

// SnHasPrefix applies the HasPrefix predicate on the "sn" field.
func SnHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldSn, v))
}

// SnHasSuffix applies the HasSuffix predicate on the "sn" field.
func SnHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldSn, v))
}

// SnEqualFold applies the EqualFold predicate on the "sn" field.
func SnEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldSn, v))
}

// SnContainsFold applies the ContainsFold predicate on the "sn" field.
func SnContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldSn, v))
}

// PosEQ applies the EQ predicate on the "pos" field.
func PosEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPos, v))
}

// PosNEQ applies the NEQ predicate on the "pos" field.
func PosNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldPos, v))
}

// PosIn applies the In predicate on the "pos" field.
func PosIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldPos, vs...))
}

// PosNotIn applies the NotIn predicate on the "pos" field.
func PosNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldPos, vs...))
}

// PosGT applies the GT predicate on the "pos" field.
func PosGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldPos, v))
}

// PosGTE applies the GTE predicate on the "pos" field.
func PosGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldPos, v))
}

// PosLT applies the LT predicate on the "pos" field.
func PosLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldPos, v))
}

// PosLTE applies the LTE predicate on the "pos" field.
func PosLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldPos, v))
}

// PosContains applies the Contains predicate on the "pos" field.
func PosContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldPos, v))
}

// PosHasPrefix applies the HasPrefix predicate on the "pos" field.
func PosHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldPos, v))
}

// PosHasSuffix applies the HasSuffix predicate on the "pos" field.
func PosHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldPos, v))
}

// PosEqualFold applies the EqualFold predicate on the "pos" field.
func PosEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldPos, v))
}

// PosContainsFold applies the ContainsFold predicate on the "pos" field.
func PosContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldPos, v))
}

// FloorEQ applies the EQ predicate on the "floor" field.
func FloorEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldFloor, v))
}

// FloorNEQ applies the NEQ predicate on the "floor" field.
func FloorNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldFloor, v))
}

// FloorIn applies the In predicate on the "floor" field.
func FloorIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldFloor, vs...))
}

// FloorNotIn applies the NotIn predicate on the "floor" field.
func FloorNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldFloor, vs...))
}

// FloorGT applies the GT predicate on the "floor" field.
func FloorGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldFloor, v))
}

// FloorGTE applies the GTE predicate on the "floor" field.
func FloorGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldFloor, v))
}

// FloorLT applies the LT predicate on the "floor" field.
func FloorLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldFloor, v))
}

// FloorLTE applies the LTE predicate on the "floor" field.
func FloorLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldFloor, v))
}

// FloorContains applies the Contains predicate on the "floor" field.
func FloorContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldFloor, v))
}

// FloorHasPrefix applies the HasPrefix predicate on the "floor" field.
func FloorHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldFloor, v))
}

// FloorHasSuffix applies the HasSuffix predicate on the "floor" field.
func FloorHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldFloor, v))
}

// FloorIsNil applies the IsNil predicate on the "floor" field.
func FloorIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldFloor))
}

// FloorNotNil applies the NotNil predicate on the "floor" field.
func FloorNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldFloor))
}

// FloorEqualFold applies the EqualFold predicate on the "floor" field.
func FloorEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldFloor, v))
}

// FloorContainsFold applies the ContainsFold predicate on the "floor" field.
func FloorContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldFloor, v))
}

// BuildingEQ applies the EQ predicate on the "building" field.
func BuildingEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldBuilding, v))
}

// BuildingNEQ applies the NEQ predicate on the "building" field.
func BuildingNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldBuilding, v))
}

// BuildingIn applies the In predicate on the "building" field.
func BuildingIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldBuilding, vs...))
}

// BuildingNotIn applies the NotIn predicate on the "building" field.
func BuildingNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldBuilding, vs...))
}

// BuildingGT applies the GT predicate on the "building" field.
func BuildingGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldBuilding, v))
}

// BuildingGTE applies the GTE predicate on the "building" field.
func BuildingGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldBuilding, v))
}

// BuildingLT applies the LT predicate on the "building" field.
func BuildingLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldBuilding, v))
}

// BuildingLTE applies the LTE predicate on the "building" field.
func BuildingLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldBuilding, v))
}

// BuildingContains applies the Contains predicate on the "building" field.
func BuildingContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldBuilding, v))
}

// BuildingHasPrefix applies the HasPrefix predicate on the "building" field.
func BuildingHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldBuilding, v))
}

// BuildingHasSuffix applies the HasSuffix predicate on the "building" field.
func BuildingHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldBuilding, v))
}

// BuildingIsNil applies the IsNil predicate on the "building" field.
func BuildingIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldBuilding))
}

// BuildingNotNil applies the NotNil predicate on the "building" field.
func BuildingNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldBuilding))
}

// BuildingEqualFold applies the EqualFold predicate on the "building" field.
func BuildingEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldBuilding, v))
}

// BuildingContainsFold applies the ContainsFold predicate on the "building" field.
func BuildingContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldBuilding, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldArea, v))
}

// AreaContains applies the Contains predicate on the "area" field.
func AreaContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldArea, v))
}

// AreaHasPrefix applies the HasPrefix predicate on the "area" field.
func AreaHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldArea, v))
}

// AreaHasSuffix applies the HasSuffix predicate on the "area" field.
func AreaHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldArea, v))
}

// AreaIsNil applies the IsNil predicate on the "area" field.
func AreaIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldArea))
}

// AreaNotNil applies the NotNil predicate on the "area" field.
func AreaNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldArea))
}

// AreaEqualFold applies the EqualFold predicate on the "area" field.
func AreaEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldArea, v))
}

// AreaContainsFold applies the ContainsFold predicate on the "area" field.
func AreaContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldArea, v))
}

// NatEQ applies the EQ predicate on the "nat" field.
func NatEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldNat, v))
}

// NatNEQ applies the NEQ predicate on the "nat" field.
func NatNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldNat, v))
}

// NatIn applies the In predicate on the "nat" field.
func NatIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldNat, vs...))
}

// NatNotIn applies the NotIn predicate on the "nat" field.
func NatNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldNat, vs...))
}

// NatGT applies the GT predicate on the "nat" field.
func NatGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldNat, v))
}

// NatGTE applies the GTE predicate on the "nat" field.
func NatGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldNat, v))
}

// NatLT applies the LT predicate on the "nat" field.
func NatLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldNat, v))
}

// NatLTE applies the LTE predicate on the "nat" field.
func NatLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldNat, v))
}

// NatContains applies the Contains predicate on the "nat" field.
func NatContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldNat, v))
}

// NatHasPrefix applies the HasPrefix predicate on the "nat" field.
func NatHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldNat, v))
}

// NatHasSuffix applies the HasSuffix predicate on the "nat" field.
func NatHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldNat, v))
}

// NatIsNil applies the IsNil predicate on the "nat" field.
func NatIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldNat))
}

// NatNotNil applies the NotNil predicate on the "nat" field.
func NatNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldNat))
}

// NatEqualFold applies the EqualFold predicate on the "nat" field.
func NatEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldNat, v))
}

// NatContainsFold applies the ContainsFold predicate on the "nat" field.
func NatContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldNat, v))
}

// UserEQ applies the EQ predicate on the "user" field.
func UserEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldUser, v))
}

// UserNEQ applies the NEQ predicate on the "user" field.
func UserNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldUser, v))
}

// UserIn applies the In predicate on the "user" field.
func UserIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldUser, vs...))
}

// UserNotIn applies the NotIn predicate on the "user" field.
func UserNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldUser, vs...))
}

// UserGT applies the GT predicate on the "user" field.
func UserGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldUser, v))
}

// UserGTE applies the GTE predicate on the "user" field.
func UserGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldUser, v))
}

// UserLT applies the LT predicate on the "user" field.
func UserLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldUser, v))
}

// UserLTE applies the LTE predicate on the "user" field.
func UserLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldUser, v))
}

// UserContains applies the Contains predicate on the "user" field.
func UserContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldUser, v))
}

// UserHasPrefix applies the HasPrefix predicate on the "user" field.
func UserHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldUser, v))
}

// UserHasSuffix applies the HasSuffix predicate on the "user" field.
func UserHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldUser, v))
}

// UserIsNil applies the IsNil predicate on the "user" field.
func UserIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldUser))
}

// UserNotNil applies the NotNil predicate on the "user" field.
func UserNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldUser))
}

// UserEqualFold applies the EqualFold predicate on the "user" field.
func UserEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldUser, v))
}

// UserContainsFold applies the ContainsFold predicate on the "user" field.
func UserContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldUser, v))
}

// PwdEQ applies the EQ predicate on the "pwd" field.
func PwdEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEQ(FieldPwd, v))
}

// PwdNEQ applies the NEQ predicate on the "pwd" field.
func PwdNEQ(v string) predicate.Setup {
	return predicate.Setup(sql.FieldNEQ(FieldPwd, v))
}

// PwdIn applies the In predicate on the "pwd" field.
func PwdIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldIn(FieldPwd, vs...))
}

// PwdNotIn applies the NotIn predicate on the "pwd" field.
func PwdNotIn(vs ...string) predicate.Setup {
	return predicate.Setup(sql.FieldNotIn(FieldPwd, vs...))
}

// PwdGT applies the GT predicate on the "pwd" field.
func PwdGT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGT(FieldPwd, v))
}

// PwdGTE applies the GTE predicate on the "pwd" field.
func PwdGTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldGTE(FieldPwd, v))
}

// PwdLT applies the LT predicate on the "pwd" field.
func PwdLT(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLT(FieldPwd, v))
}

// PwdLTE applies the LTE predicate on the "pwd" field.
func PwdLTE(v string) predicate.Setup {
	return predicate.Setup(sql.FieldLTE(FieldPwd, v))
}

// PwdContains applies the Contains predicate on the "pwd" field.
func PwdContains(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContains(FieldPwd, v))
}

// PwdHasPrefix applies the HasPrefix predicate on the "pwd" field.
func PwdHasPrefix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasPrefix(FieldPwd, v))
}

// PwdHasSuffix applies the HasSuffix predicate on the "pwd" field.
func PwdHasSuffix(v string) predicate.Setup {
	return predicate.Setup(sql.FieldHasSuffix(FieldPwd, v))
}

// PwdIsNil applies the IsNil predicate on the "pwd" field.
func PwdIsNil() predicate.Setup {
	return predicate.Setup(sql.FieldIsNull(FieldPwd))
}

// PwdNotNil applies the NotNil predicate on the "pwd" field.
func PwdNotNil() predicate.Setup {
	return predicate.Setup(sql.FieldNotNull(FieldPwd))
}

// PwdEqualFold applies the EqualFold predicate on the "pwd" field.
func PwdEqualFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldEqualFold(FieldPwd, v))
}

// PwdContainsFold applies the ContainsFold predicate on the "pwd" field.
func PwdContainsFold(v string) predicate.Setup {
	return predicate.Setup(sql.FieldContainsFold(FieldPwd, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Setup) predicate.Setup {
	return predicate.Setup(sql.NotPredicates(p))
}
