// Code generated by ent, DO NOT EDIT.

package upload

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/twiglab/doggy/orm/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldUpdateTime, v))
}

// Sn applies equality check predicate on the "sn" field. It's identical to SnEQ.
func Sn(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldSn, v))
}

// IPAddr applies equality check predicate on the "ip_addr" field. It's identical to IPAddrEQ.
func IPAddr(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldIPAddr, v))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldUUID, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldCode, v))
}

// RegTime applies equality check predicate on the "reg_time" field. It's identical to RegTimeEQ.
func RegTime(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldRegTime, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldUpdateTime, v))
}

// SnEQ applies the EQ predicate on the "sn" field.
func SnEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldSn, v))
}

// SnNEQ applies the NEQ predicate on the "sn" field.
func SnNEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldSn, v))
}

// SnIn applies the In predicate on the "sn" field.
func SnIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldSn, vs...))
}

// SnNotIn applies the NotIn predicate on the "sn" field.
func SnNotIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldSn, vs...))
}

// SnGT applies the GT predicate on the "sn" field.
func SnGT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldSn, v))
}

// SnGTE applies the GTE predicate on the "sn" field.
func SnGTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldSn, v))
}

// SnLT applies the LT predicate on the "sn" field.
func SnLT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldSn, v))
}

// SnLTE applies the LTE predicate on the "sn" field.
func SnLTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldSn, v))
}

// SnContains applies the Contains predicate on the "sn" field.
func SnContains(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContains(FieldSn, v))
}

// SnHasPrefix applies the HasPrefix predicate on the "sn" field.
func SnHasPrefix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasPrefix(FieldSn, v))
}

// SnHasSuffix applies the HasSuffix predicate on the "sn" field.
func SnHasSuffix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasSuffix(FieldSn, v))
}

// SnEqualFold applies the EqualFold predicate on the "sn" field.
func SnEqualFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEqualFold(FieldSn, v))
}

// SnContainsFold applies the ContainsFold predicate on the "sn" field.
func SnContainsFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContainsFold(FieldSn, v))
}

// IPAddrEQ applies the EQ predicate on the "ip_addr" field.
func IPAddrEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldIPAddr, v))
}

// IPAddrNEQ applies the NEQ predicate on the "ip_addr" field.
func IPAddrNEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldIPAddr, v))
}

// IPAddrIn applies the In predicate on the "ip_addr" field.
func IPAddrIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldIPAddr, vs...))
}

// IPAddrNotIn applies the NotIn predicate on the "ip_addr" field.
func IPAddrNotIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldIPAddr, vs...))
}

// IPAddrGT applies the GT predicate on the "ip_addr" field.
func IPAddrGT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldIPAddr, v))
}

// IPAddrGTE applies the GTE predicate on the "ip_addr" field.
func IPAddrGTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldIPAddr, v))
}

// IPAddrLT applies the LT predicate on the "ip_addr" field.
func IPAddrLT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldIPAddr, v))
}

// IPAddrLTE applies the LTE predicate on the "ip_addr" field.
func IPAddrLTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldIPAddr, v))
}

// IPAddrContains applies the Contains predicate on the "ip_addr" field.
func IPAddrContains(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContains(FieldIPAddr, v))
}

// IPAddrHasPrefix applies the HasPrefix predicate on the "ip_addr" field.
func IPAddrHasPrefix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasPrefix(FieldIPAddr, v))
}

// IPAddrHasSuffix applies the HasSuffix predicate on the "ip_addr" field.
func IPAddrHasSuffix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasSuffix(FieldIPAddr, v))
}

// IPAddrEqualFold applies the EqualFold predicate on the "ip_addr" field.
func IPAddrEqualFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEqualFold(FieldIPAddr, v))
}

// IPAddrContainsFold applies the ContainsFold predicate on the "ip_addr" field.
func IPAddrContainsFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContainsFold(FieldIPAddr, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldUUID, v))
}

// UUIDContains applies the Contains predicate on the "uuid" field.
func UUIDContains(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContains(FieldUUID, v))
}

// UUIDHasPrefix applies the HasPrefix predicate on the "uuid" field.
func UUIDHasPrefix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasPrefix(FieldUUID, v))
}

// UUIDHasSuffix applies the HasSuffix predicate on the "uuid" field.
func UUIDHasSuffix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasSuffix(FieldUUID, v))
}

// UUIDIsNil applies the IsNil predicate on the "uuid" field.
func UUIDIsNil() predicate.Upload {
	return predicate.Upload(sql.FieldIsNull(FieldUUID))
}

// UUIDNotNil applies the NotNil predicate on the "uuid" field.
func UUIDNotNil() predicate.Upload {
	return predicate.Upload(sql.FieldNotNull(FieldUUID))
}

// UUIDEqualFold applies the EqualFold predicate on the "uuid" field.
func UUIDEqualFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEqualFold(FieldUUID, v))
}

// UUIDContainsFold applies the ContainsFold predicate on the "uuid" field.
func UUIDContainsFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContainsFold(FieldUUID, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.Upload {
	return predicate.Upload(sql.FieldHasSuffix(FieldCode, v))
}

// CodeIsNil applies the IsNil predicate on the "code" field.
func CodeIsNil() predicate.Upload {
	return predicate.Upload(sql.FieldIsNull(FieldCode))
}

// CodeNotNil applies the NotNil predicate on the "code" field.
func CodeNotNil() predicate.Upload {
	return predicate.Upload(sql.FieldNotNull(FieldCode))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.Upload {
	return predicate.Upload(sql.FieldContainsFold(FieldCode, v))
}

// RegTimeEQ applies the EQ predicate on the "reg_time" field.
func RegTimeEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldEQ(FieldRegTime, v))
}

// RegTimeNEQ applies the NEQ predicate on the "reg_time" field.
func RegTimeNEQ(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNEQ(FieldRegTime, v))
}

// RegTimeIn applies the In predicate on the "reg_time" field.
func RegTimeIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldIn(FieldRegTime, vs...))
}

// RegTimeNotIn applies the NotIn predicate on the "reg_time" field.
func RegTimeNotIn(vs ...time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldNotIn(FieldRegTime, vs...))
}

// RegTimeGT applies the GT predicate on the "reg_time" field.
func RegTimeGT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGT(FieldRegTime, v))
}

// RegTimeGTE applies the GTE predicate on the "reg_time" field.
func RegTimeGTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldGTE(FieldRegTime, v))
}

// RegTimeLT applies the LT predicate on the "reg_time" field.
func RegTimeLT(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLT(FieldRegTime, v))
}

// RegTimeLTE applies the LTE predicate on the "reg_time" field.
func RegTimeLTE(v time.Time) predicate.Upload {
	return predicate.Upload(sql.FieldLTE(FieldRegTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Upload) predicate.Upload {
	return predicate.Upload(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Upload) predicate.Upload {
	return predicate.Upload(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Upload) predicate.Upload {
	return predicate.Upload(sql.NotPredicates(p))
}
